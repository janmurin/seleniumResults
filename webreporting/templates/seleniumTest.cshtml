@using SeleniumResults.Models
@model SeleniumResults.webreporting.ViewModels.SeleniumTestViewModel

@{
    Layout = "_TestPageLayout.cshtml";
}

<!-- Page Heading -->
<h1 class="h3 mb-2 text-gray-800">@Model.TestStats.Name</h1>

<div class="row">

    <!-- Area Chart -->
    <div class="col-xl-12">
        <div class="card shadow mb-4">
            <!-- Card Header - Dropdown -->
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Earnings Overview</h6>
                <div class="dropdown no-arrow">
                    <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        <i class="fas fa-ellipsis-v fa-sm fa-fw text-gray-400"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-right shadow animated--fade-in" aria-labelledby="dropdownMenuLink">
                        <div class="dropdown-header">Dropdown Header:</div>
                        <a class="dropdown-item" href="#">Action</a>
                        <a class="dropdown-item" href="#">Another action</a>
                        <div class="dropdown-divider"></div>
                        <a class="dropdown-item" href="#">Something else here</a>
                    </div>
                </div>
            </div>
            <!-- Card Body -->
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="myAreaChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="table-responsive bg-white">
    <table class="table table-bordered" id="seleniumTestDatatable" width="100%" cellspacing="0">
        <thead>
        <tr>
            <th>Time</th>
            <th>File</th>
            <th>Application</th>
            <th>Sel1/Sel2</th>
            <th>Result</th>
            <th>BuildNumber</th>
            <th>Failure Rate Last 10 builds</th>
        </tr>
        </thead>
        <tfoot>
        <tr>
            <th>Time</th>
            <th>File</th>
            <th>Application</th>
            <th>Sel1/Sel2</th>
            <th>Result</th>
            <th>BuildNumber</th>
            <th>Failure Rate Last 10 builds</th>
        </tr>
        </tfoot>
        <tbody>
        @foreach (var sr in Model.TestStats.Results)
        {
            <tr>
                <td>@sr.Time</td>
                <td>
                    <a href="../data/@sr.TestRunMetaData.OriginalFileName" target="_blank">@sr.TestRunMetaData.OriginalFileName</a>
                </td>
                <td>@sr.TestRunMetaData.FlytApplicationType</td>
                <td>
                    @if (sr.IsSel1)
                    {
                        <span class="badge badge-light">Selenium 1</span>
                    }
                    @if (sr.IsSel2)
                    {
                        <span class="badge badge-info">Selenium 2</span>
                    }
                </td>
                <td>
                    @if (sr.IsPassed)
                    {
                        <span class="badge badge-success">Passed</span>
                    }
                    else
                    {
                        <span class="badge badge-danger">Failed</span>
                    }
                </td>
                <td>@sr.TestRunMetaData.BuildNumber</td>
                <td data-order="@sr.LastXFailureRate">
                                    @sr.LastXFailureRateString
                                    <a class="" href="#" data-toggle="modal" data-target="#lastXBuildsModal_@sr.Name">Detail</a>
                                    <div class="modal fade" id="lastXBuildsModal_@sr.Name" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                        <div class="modal-dialog modal-xl" role="document">
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <h5 class="modal-title" id="exampleModalLabel">@sr.Name last 10 builds</h5>
                                                    <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                                        <span aria-hidden="true">Ã—</span>
                                                    </button>
                                                </div>
                                                <div class="modal-body">
                                                    @{
                                                        KeyValuePair<int, LastXBuildsStat> valuePair = sr.LastXBuildsDict.First();
                                                    }
                                                    <table class="table table-borderless table-sm w-auto">
                                                        <tbody>
                                                        <tr>
                                                            <th scope="row">Failure rate:</th>
                                                            <td>@valuePair.Value.FailureRate %</td>
                                                        </tr>
                                                        <tr>
                                                            <th scope="row">Total builds:</th>
                                                            <td>@valuePair.Value.TotalFailed/@valuePair.Value.TotalBuilds</td>
                                                        </tr>
                                                        </tbody>
                                                    </table>
                                                    <table class="table table-bordered modal-datatable" width="100%" cellspacing="0">
                                                        <thead>
                                                        <tr>
                                                            <th>Time</th>
                                                            <th>File</th>
                                                            <th>Application</th>
                                                            <th>Result</th>
                                                            <th>BuildNumber</th>
                                                        </tr>
                                                        </thead>
                                                        <tfoot>
                                                        <tr>
                                                            <th>Time</th>
                                                            <th>File</th>
                                                            <th>Application</th>
                                                            <th>Result</th>
                                                            <th>BuildNumber</th>
                                                        </tr>
                                                        </tfoot>
                                                        <tbody>
                                                        @foreach (var str in valuePair.Value.GetOrderedTestRuns())
                                                        {
                                                            <tr>
                                                                <td>@str.Time</td>
                                                                <td>
                                                                    <a href="data/@str.TestRunMetaData.OriginalFileName" target="_blank">@str.TestRunMetaData.OriginalFileName</a>
                                                                </td>
                                                                <td>@str.TestRunMetaData.FlytApplicationType</td>
                                                                <td>
                                                                    <span class="badge @(str.IsPassed ? "badge-success" : "badge-danger")">@str.TestResultType</span>
                                                                </td>
                                                                <td>@str.TestRunMetaData.BuildNumber</td>
                                                            </tr>
                                                        }
                                                        </tbody>
                                                    </table>
                                                </div>
                                                <div class="modal-footer">
                                                    <button class="btn btn-secondary" type="button" data-dismiss="modal">Close</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            $('#seleniumTestDatatable').DataTable({
                "order": [[0, "desc"]],
                "pageLength": 25
            });
        });
        
    Chart.defaults.global.defaultFontFamily = 'Nunito', '-apple-system,system-ui,BlinkMacSystemFont,"Segoe UI",Roboto,"Helvetica Neue",Arial,sans-serif';
    Chart.defaults.global.defaultFontColor = '#858796';

    function number_format(number, decimals, dec_point, thousands_sep) {
      // *     example: number_format(1234.56, 2, ',', ' ');
      // *     return: '1 234,56'
      number = (number + '').replace(',', '').replace(' ', '');
      var n = !isFinite(+number) ? 0 : +number,
        prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
        sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
        dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
        s = '',
        toFixedFix = function(n, prec) {
          var k = Math.pow(10, prec);
          return '' + Math.round(n * k) / k;
        };
      // Fix for IE parseFloat(0.55).toFixed(0) = 0;
      s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
      if (s[0].length > 3) {
        s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
      }
      if ((s[1] || '').length < prec) {
        s[1] = s[1] || '';
        s[1] += new Array(prec - s[1].length + 1).join('0');
      }
      return s.join(dec);
    }

    // Area Chart Example
    var ctx = document.getElementById("myAreaChart");
    var myLineChart = new Chart(ctx, {
      type: 'line',
      data: {
        labels: ["1", "2", "3", "4", "5", "6", "7", "8", "9", "10"],
        datasets: [{
          label: "Earnings", 
            fill: false,
          lineTension: 0.3,
          //backgroundColor: "rgba(78, 115, 223, 0.05)",
          borderColor: window.chartColors.green,
          pointRadius: 3,
          pointBackgroundColor: window.chartColors.green,
          pointBorderColor: window.chartColors.green,
          pointHoverRadius: 3,
          pointHoverBackgroundColor: window.chartColors.green,
          pointHoverBorderColor: window.chartColors.green,
          pointHitRadius: 10,
          pointBorderWidth: 2,
          data: [0, 12, 14, 34, 55, 12, 8, 0, 23, 56],
        },{
            label: "Earnings2",
            fill: false,
            lineTension: 0.3,
            backgroundColor: "rgba(78, 115, 223, 0.05)",
            borderColor: "rgba(78, 115, 223, 1)",
            pointRadius: 3,
            pointBackgroundColor: "rgba(78, 115, 223, 1)",
            pointBorderColor: "rgba(78, 115, 223, 1)",
            pointHoverRadius: 3,
            pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
            pointHoverBorderColor: "rgba(78, 115, 223, 1)",
            pointHitRadius: 10,
            pointBorderWidth: 2,
            data: [15, 42, 82, 40, 3, 6, 10, 22, 34, 4],
        }],
      },
      options: {
        maintainAspectRatio: false,
        layout: {
          padding: {
            left: 10,
            right: 25,
            top: 25,
            bottom: 0
          }
        },
        scales: {
          xAxes: [{
            time: {
              unit: 'date'
            },
            gridLines: {
              display: false,
              drawBorder: false
            },
            ticks: {
              maxTicksLimit: 7
            }
          }],
          yAxes: [{
            ticks: {
              maxTicksLimit: 5,
              padding: 10,
              // Include a dollar sign in the ticks
              callback: function(value, index, values) {
                return number_format(value) + "%";
              }
            },
            gridLines: {
              color: "rgb(234, 236, 244)",
              zeroLineColor: "rgb(234, 236, 244)",
              drawBorder: false,
              borderDash: [2],
              zeroLineBorderDash: [2]
            }
          }],
        },
        legend: {
          display: false
        },
        tooltips: {
          backgroundColor: "rgb(255,255,255)",
          bodyFontColor: "#858796",
          titleMarginBottom: 10,
          titleFontColor: '#6e707e',
          titleFontSize: 14,
          borderColor: '#dddfeb',
          borderWidth: 1,
          xPadding: 15,
          yPadding: 15,
          displayColors: false,
          intersect: false,
          mode: 'index',
          caretPadding: 10,
          callbacks: {
            label: function(tooltipItem, chart) {
              var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
              return datasetLabel + ': $' + number_format(tooltipItem.yLabel);
            }
          }
        }
      }
    });
    </script>
}